#!/bin/bash

pprint (){
    cred='\033[0;31m'
    cgreen='\033[0;32m'
    cyellow='\033[0;33m'
    cblue='\033[0;34m'
    cpurple='\033[0;35m'
    eval "export color='$cpurple'"
    [ ! -z $2 ] && eval "export color=\"\$$2\""
    printf "$color $1"
}

color_reset(){ printf '\033[0;37m'; }

yesnoprompt(){
    old_stty_cfg=$(stty -g)
    stty raw -echo ; answer=$(head -c 1)
    stty $old_stty_cfg
    echo "$answer" | grep -iq "^y"
}

update() {
    pprint "\n\nUpdating package list.. "
    sudo apt update -y &>/dev/null
    if [ $? -eq 0 ]; then
        pprint "DONE!\n\n" "cgreen"
    else
        pprint "FAIL.\n\n" "cred"; exit 1
    fi
}

packages(){
    if ! command -v pip &>/dev/null; then
        pprint "Couldn't find pip, installing now..."
        sudo apt install python3-pip -y 2>pypilog.txt 1>/dev/null &&
        pprint "SUCCESS.\n\n" "cgreen" || (pprint "FAIL.\n\n" "cred"; exit 1)
    fi

    if ! command -v ffmpeg &>/dev/null; then
        pprint "Couldn't find ffmpeg, installing now..."
        if sudo apt install ffmpeg -y &>/dev/null; then
            pprint "SUCCESS.\n\n" "cgreen"
        else
            pprint "FAIL.\n\n" "cred"
            pprint "You need to install ffmpeg manually in order to deploy VIPMUSIC, exiting...\n" "cblue"
            exit 1
        fi
    fi

    # Check ffmpeg version
    fv=$(ffmpeg -version | head -n 1 | grep -Po 'version \K[0-9]+')
    if [ "$fv" -lt 4 ]; then
        pprint "⚠️ Live streams not supported (ffmpeg $fv detected, need v4+)\n" "cblue"
    fi
}

node(){
    command -v npm &>/dev/null && return
    pprint "Installing Node.js and Npm..  "
    curl -fsSL https://deb.nodesource.com/setup_19.x | sudo -E bash - &>nodelog.txt &&
    sudo apt install -y nodejs &>>nodelog.txt &&
    sudo npm i -g npm &>>nodelog.txt &&
    pprint "SUCCESS!\n" "cgreen" || (pprint "FAIL.\n" "cred"; exit 1)
}

installation(){
    pprint "\n\nUpgrading pip and installing dependency packages..."
    pip3 install --upgrade pip setuptools wheel &>>pypilog.txt &&
    pip3 install -U -r requirements.txt &>>pypilog.txt &&
    pprint "DONE.\n" "cgreen" && return
    pprint "FAIL.\n" "cred"
    exit 1
}

clear
pprint "Welcome to VIPMUSIC Setup Installer\n\n"
pprint "If you see any error, check logs:\n"
pprint " - Node.js logs: nodelog.txt\n"
pprint " - Python packages logs: pypilog.txt\n\n"
sleep 1
pprint "Script needs sudo privileges.\n"
sudo test

update
packages
node
installation
pprint "\n\nVIPMUSIC Installation Completed!" "cgreen"
sleep 1
clear

pprint "\nEnter Your Values Below\n\n\n"
pprint "API ID: "; color_reset; read api_id
pprint "\nAPI HASH: "; color_reset; read api_hash
pprint "\nBOT TOKEN: "; color_reset; read bot_token
pprint "\nOWNER ID: "; color_reset; read ownid
pprint "\nMONGO DB URI: "; color_reset; read mongo_db
pprint "\nLOG GROUP ID: "; color_reset; read logger
pprint "\nSTRING SESSION: "; color_reset; read string_session

pprint "\n\nProcessing your vars..." "cgreen"

# Create .env safely
cat > .env <<EOF
API_ID="$api_id"
API_HASH="$api_hash"
BOT_TOKEN="$bot_token"
MONGO_DB_URI="$mongo_db"
LOG_GROUP_ID="$logger"
STRING_SESSION="$string_session"
OWNER_ID="$ownid"
EOF

clear
pprint "\n\nThanks for using VIPMUSIC installer! ✅\n"
pprint "Your .env has been saved successfully.\n"
pprint "Now you can start the bot with: bash start\n\n"
